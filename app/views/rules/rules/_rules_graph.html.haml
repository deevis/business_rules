#rules-graph
  %h4 Rules Graph

:css
  .node circle {
    fill: #fff;
    stroke: steelblue;
    stroke-width: 1.5px;
  }

  .node {
    font: 10px sans-serif;
  }

  .node text {
    font-size: 11px;
  }

  .link {
    fill: none;
    stroke: #ccc;
    stroke-width: 1.5px;
  }

-events={}.tap do |events|
  -@rules_rules.each do |rule|
    -rule.events.each do |event|
      -events[event] ||= []
      -events[event] << rule
-data=events.map do |event, rules|
  -{name: event, children: rules.map{|r| {name: r.name, children: r.d3_actions_map } } }
-if params[:event]
  -data=data.find{|d| d[:name] == params[:event]}
  -height = 400
-else
  -data={name: "Events", children: data}
  -height = 1200
=page_js do
  :javascript
    var data = #{data.to_json};
    var width = 1200,
        height = #{height};

    var cluster = d3.layout.cluster()
        .size([height, width - 160]);

    var diagonal = d3.svg.diagonal()
        .projection(function(d) { return [d.y, d.x]; });

    var svg = d3.select("#rules-graph").append("svg")
        .attr("width", width)
        .attr("height", height)
      .append("g")
        .attr("transform", "translate(15,0)");

      var nodes = cluster.nodes(data),
          links = cluster.links(nodes);

      var link = svg.selectAll(".link")
          .data(links)
        .enter().append("path")
          .attr("class", "link")
          .attr("d", diagonal);

      svg.selectAll(".link").data(links).append("text").append("textPath").attr("stroke","black").text("hi mom");

      var node = svg.selectAll(".node")
          .data(nodes)
        .enter().append("g")
          .attr("class", "node")
          .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })

      node.append("circle")
          .attr("r", 10);

      node.append("text")
          .attr("dx", function(d) { return d.children ? 30 : 18; })
          .attr("dy", -15)
          .style("text-anchor", function(d) { return d.children ? "end" : "start"; })
          .text(function(d) { return d.name; });
      

    d3.select(self.frameElement).style("height", height + "px");